---
import '../styles/global.css';
---
<html lang="ru">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Birthdays</title>
	</head>
	<body>
    
    <script src="preline/dist/preline"></script>

    <div class="border-b border-gray-200 dark:border-gray-700">
      <nav class="flex space-x-2" aria-label="Tabs" role="tablist">
        <button type="button" class="hs-tab-active:font-semibold hs-tab-active:border-blue-600 hs-tab-active:text-blue-600 py-4 px-1 inline-flex items-center gap-2 border-b-[3px] border-transparent text-sm whitespace-nowrap text-gray-500 hover:text-blue-600 active" id="tabs-with-underline-item-1" data-hs-tab="#tabs-with-underline-1" aria-controls="tabs-with-underline-1" role="tab">
          Сегодня
        </button>
        <button type="button" class="hs-tab-active:font-semibold hs-tab-active:border-blue-600 hs-tab-active:text-blue-600 py-4 px-1 inline-flex items-center gap-2 border-b-[3px] border-transparent text-sm whitespace-nowrap text-gray-500 hover:text-blue-600" id="tabs-with-underline-item-2" data-hs-tab="#tabs-with-underline-2" aria-controls="tabs-with-underline-2" role="tab">
          Месяц
        </button>
        <button type="button" class="hs-tab-active:font-semibold hs-tab-active:border-blue-600 hs-tab-active:text-blue-600 py-4 px-1 inline-flex items-center gap-2 border-b-[3px] border-transparent text-sm whitespace-nowrap text-gray-500 hover:text-blue-600" id="tabs-with-underline-item-3" data-hs-tab="#tabs-with-underline-3" aria-controls="tabs-with-underline-3" role="tab">
          Все
        </button>
      </nav>
    </div>

    <div class="mt-3">
      <div id="tabs-with-underline-1" role="tabpanel" aria-labelledby="tabs-with-underline-item-1">
         <h2>В этот день родились:</h2>
          <div id="day">
            <ul class="list"></ul>
          </div>
      </div>
      <div id="tabs-with-underline-2" class="hidden" role="tabpanel" aria-labelledby="tabs-with-underline-item-2">
        <h2>В этом месяце родились:</h2>
        <div id="month">
          <button class="sort hidden" data-sort="birth">
            Сортировать по дате
          </button>
          <ul class="list"></ul>
        </div>
      </div>
      <div id="tabs-with-underline-3" class="hidden" role="tabpanel" aria-labelledby="tabs-with-underline-item-3">
        <h2>Вce:</h2>
          <div id="all">
            <ul class="list"></ul>
          </div>
      </div>
    </div>
    
<script>
    import List from "list.js";
(async () => {
  const response = await fetch('https://docs.google.com/spreadsheets/d/e/2PACX-1vT-5j3rZHVbVl3fdH6Up-V_eRkb35Qb6Hev1cY0FQgi6RKGrinIiJdDkBno-XxPHMpKO_3MK6Npwakb/pub?gid=0&single=true&output=csv');
  if (response.ok) {
      const result = await response.text();
      console.log(result);
			const lines = result.split("\r\n");
			const persons = lines.map((line) => {
			  const fields = line.split(",");
				return { name: fields[0], birth: fields[1] };
			});
			const options = {
				valueNames: ["name", "birth"],
				item: '<li><h2 class="name"></h2><p class="birth"></p></li>',
			};
			var list = new List("all", options, persons);
      
      function isBirthday(value) {
        if (typeof value !== 'object') {
            return false;
        }
        const birthParts = value.birth.split(".");
        const birthMonth = parseInt(birthParts[1]);
        const birthDay = parseInt(birthParts[0]);
        const birthOffset = birthMonth * 100 + birthDay;

        const nowDate = new Date();
        const nowMonth = nowDate.getMonth() + 1;
        const nowDay = nowDate.getDate();
        const nowOffset = nowMonth * 100 + nowDay;

        return birthOffset === nowOffset;
      }

      var values = persons.filter(isBirthday);
      list = new List('day', options, values);

      function isBirthmonth(value) {
        if (typeof value !== 'object') {
            return false;
        }
        const birthParts = value.birth.split(".");
        const birthMonth = parseInt(birthParts[1]);

        const nowDate = new Date();
        const nowMonth = nowDate.getMonth() + 1;

        return birthMonth === nowMonth;
      }
            
      var valuesMonth = persons.filter(isBirthmonth);
      list = new List('month', options, valuesMonth);
      document.querySelectorAll(".sort").forEach(button => button.click());  
    } else {
      console.log(response.status);
    }
})();

</script>

</body>
</html>
